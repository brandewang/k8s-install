#generate kubeconfig file for kubelet
- name: install kubectl on local
  copy: src=kubectl dest={{ BIN_PATH }} mode=0755
  connection: local
- name: create conf dir
  file: path={{ CONF_PATH }} state=directory
  connection: local
- name: create kubelet bootstrapping kubeconfig
  shell: kubectl config set-cluster kubernetes --certificate-authority={{ SSL_PATH }}/ca.pem  --embed-certs=true --server={{ KUBE_APISERVER_CLUSTER }} --kubeconfig=bootstrap.kubeconfig && \
         kubectl config set-credentials kubelet-bootstrap --token={{ BOOTSTRAP_TOKEN }} --kubeconfig=bootstrap.kubeconfig && \
         kubectl config set-context default --cluster=kubernetes --user=kubelet-bootstrap --kubeconfig=bootstrap.kubeconfig && \
         kubectl config use-context default --kubeconfig=bootstrap.kubeconfig
  args:
    chdir: "{{ CONF_PATH }}"
  connection: local
  ignore_errors: True

- name: create kube-proxy.kubeconfig kubeconfig
  shell: kubectl config set-cluster kubernetes \
         --certificate-authority=/etc/kubernetes/ssl/ca.pem \
         --embed-certs=true \
         --server={{ KUBE_APISERVER_CLUSTER }} \
         --kubeconfig=kube-proxy.kubeconfig && \
         kubectl config set-credentials kube-proxy \
         --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem \
         --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem \
         --embed-certs=true \
         --kubeconfig=kube-proxy.kubeconfig && \
         kubectl config set-context default \
         --cluster=kubernetes \
         --user=kube-proxy \
         --kubeconfig=kube-proxy.kubeconfig && \
         kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
  args:
    chdir: "{{ CONF_PATH }}"
  connection: local
  ignore_errors: True

- name: file mod change
  file: path={{ CONF_PATH }}/{{ item }} mode=0644
  with_items:
  - bootstrap.kubeconfig
  - kube-proxy.kubeconfig
  connection: local
